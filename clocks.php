<!DOCTYPE html>
<html lang="en-US">

<head>
  <?php include 'header-head.php'; ?>
  <link rel="stylesheet" href="practice.css">
  <meta property="og:title" content="Elapsed Time 游독">
  <meta property="og:description" content="Find how much time passes between two different given times (the times are given with analog clocks). You can choose from many options below, such as whether to include AM/PM or not and limiting the times to full hours, full and half hours, quarter hours, and so on. 游독">
  <meta property="og:image" content="https://www.mathmammoth.com/practice/elapsed-time.png">
  <meta property="og:image:secure_url" content="https://www.mathmammoth.com/practice/elapsed-time.png" />
  <meta property="og:image:type" content="image/png" />
  <meta property="og:image:width" content="560" />
  <meta property="og:image:height" content="517" />
  <meta property="og:image:alt" content="Elapsed Time 游독" />
  <meta property="og:url" content="https://www.mathmammoth.com/practice/clocks">
  <meta property="og:site_name" content="Math Mammoth Practice">
  <meta property="og:locale" content="en_US" />
  <meta name="twitter:card" content="summary_large_image">
  <meta name="twitter:image:alt" content="Elapsed Time 游독">
  <title>Elapsed Time 游독 &mdash; Online Practice (grades 1-5)</title>
  <style>
    .clock {
      width: 200px;
      position: relative;
      height: 200px;
      background-image: url('data:image/svg+xml;utf8,%3C%3Fxml%20version%3D%221.0%22%20encoding%3D%22UTF-8%22%3F%3E%3Csvg%20viewBox%3D%220%200%20100%20100%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20width%3D%22200%22%20height%3D%22200%22%3E%20%3Cpath%20transform%3D%22matrix(1.0496%200%200%201.0496%20-2.0927%20-.93294)%22%20d%3D%22m96.317%2048.527c0%2025.77-20.915%2046.685-46.685%2046.685s-46.685-20.915-46.685-46.685%2020.915-46.685%2046.685-46.685%2046.685%2020.915%2046.685%2046.685z%22%20fill%3D%22%23f2f2f2%22%20stroke%3D%22%23000%22%20stroke-linecap%3D%22round%22%20stroke-linejoin%3D%22round%22%20stroke-width%3D%221.9055%22%2F%3E%20%3Cpath%20transform%3D%22matrix(1.2276%200%200%201.2633%20-11.06%20-17.096)%22%20d%3D%22m86.399%2050.648c0%2019.663-16.423%2035.622-36.658%2035.622s-36.658-15.959-36.658-35.622%2016.423-35.622%2036.658-35.622%2036.658%2015.959%2036.658%2035.622z%22%20fill%3D%22%23f9f9f9%22%2F%3E%20%3Cpath%20d%3D%22m50.5%2049.5%2042.004-24.345%22%20fill%3D%22none%22%20stroke%3D%22%23000%22%2F%3E%20%3Cpath%20d%3D%22m49.5%2049.5-42.37-23.979%22%20fill%3D%22none%22%20stroke%3D%22%23000%22%2F%3E%20%3Cpath%20d%3D%22m49.5%2050.5-42.187%2024.345%22%20fill%3D%22none%22%20stroke%3D%22%23000%22%2F%3E%20%3Cpath%20d%3D%22m50.5%2050.5%2041.638%2023.612%22%20fill%3D%22none%22%20stroke%3D%22%23000%22%2F%3E%20%3Cpath%20d%3D%22m74.662%2092.138-24.162-41.638%22%20fill%3D%22none%22%20stroke%3D%22%23000%22%2F%3E%20%3Cpath%20d%3D%22m25.521%2092.687%2023.979-42.187%22%20fill%3D%22none%22%20stroke%3D%22%23000%22%2F%3E%20%3Cpath%20d%3D%22m0.45432%2050h99.153%22%20fill%3D%22none%22%20stroke%3D%22%23000%22%2F%3E%20%3Cpath%20d%3D%22m50%200.39255v99.164%22%20fill%3D%22none%22%20stroke%3D%22%23000%22%2F%3E%20%3Cpath%20d%3D%22m5.1562%2046.156c-0.10772%201.2693-0.15625%202.5467-0.15625%203.8438%200%2024.84%2020.16%2045%2045%2045s45-20.16%2045-45c0-1.297-0.04852-2.5744-0.15625-3.8438-1.9554%2023.04-21.301%2041.156-44.844%2041.156s-42.888-18.117-44.844-41.156z%22%20fill%3D%22%23f2f2f2%22%2F%3E%20%3Cpath%20d%3D%22m74.845%208.0455-24.345%2041.455%22%20fill%3D%22none%22%20stroke%3D%22%23000%22%2F%3E%20%3Cpath%20d%3D%22m25.338%207.1296%2024.162%2042.37%22%20fill%3D%22none%22%20stroke%3D%22%23000%22%2F%3E%20%3Cpath%20transform%3D%22matrix(1.2276%200%200%201.2633%20-11.06%20-13.982)%22%20d%3D%22m86.399%2050.648c0%2019.663-16.423%2035.622-36.658%2035.622s-36.658-15.959-36.658-35.622%2016.423-35.622%2036.658-35.622%2036.658%2015.959%2036.658%2035.622z%22%20fill%3D%22%23f9f9f9%22%2F%3E%20%3Cpath%20transform%3D%22matrix(1.0496%200%200%201.0496%20-2.0927%20-.93294)%22%20d%3D%22m96.317%2048.527c0%2025.77-20.915%2046.685-46.685%2046.685s-46.685-20.915-46.685-46.685%2020.915-46.685%2046.685-46.685%2046.685%2020.915%2046.685%2046.685z%22%20fill%3D%22none%22%20stroke%3D%22%23000%22%20stroke-linecap%3D%22round%22%20stroke-linejoin%3D%22round%22%20stroke-width%3D%221.9055%22%2F%3E%20%3Cpath%20d%3D%22m19.0176%2C72.35307c-.29493.49414-.61866.896-.97119%2C1.20557s-.72901.55078-1.12939.72363-.87696.33057-1.42969.47314c-.5586.14258-1.07422.21387-1.54688.21387-.76953%2C0-1.36133-.19141-1.77539-.57422-.43164-.38281-.64746-.85937-.64746-1.42969%200-.53125.19922-1.08301.59766-1.65527%20.20312-.30078.49121-.60449.86426-.91113-.25586-.12109-.44336-.32519-.5625-.61231-.15235-.36913-.22852-.7373-.22852-1.10449%200-.45117.11621-.85937.34863-1.22461%20.36133-.57421.73682-1.00195%201.12647-1.2832s.92236-.52538%201.59814-.73242c.28515-.08788.56445-.13183.83789-.13184%20.32421%2C1e-005%20.62841.05909.9126.17725s.52343.29298.71777.52441%20.32763.51319.3999.84521c-1e-005%2C.35938-.06397.74122-.19189%2C1.14551s-.31202.77051-.55225%2C1.09863c.67187.10938%201.13964.38965%201.40332.84082%20.34374.57032.51562%2C1.05469.51563%2C1.45313-1e-005%2C.32227-.09571.6416-.28711.95801zm-1.87207-5.21777c-.29297-.33593-.68165-.5039-1.16602-.50391-.35743%2C1e-005-.72364.08643-1.09863.25928-.375.17286-.68848.37843-.94043.6167-.02735.05274-.11817.16749-.27246.34424s-.27735.34278-.36914.49805-.1377.32569-.1377.51123c.08789.30469.37597.45704.86426.45703%20.04883%2C1e-005%20.21679-.01171.50391-.03516%20.77148-.06835%201.3789-.32421%201.82227-.76758%20.26367-.26367.46191-.48974.59473-.67822s.19921-.42236.19922-.70166zm.82617%2C3.58594c-.0879-.19336-.20655-.32373-.35596-.39111s-.3462-.10107-.59033-.10107c-.13477%2C0-.33887.00879-.6123.02637-.33985.01563-.77735.10938-1.3125.28125s-1.02783.40088-1.47803.68701-.73584.59912-.85693.93897c-.04102.16797-.06152.29981-.06152.39551%200%2C.16992.03711.31299.11133.4292s.17139.20703.2915.27246%20.25781.11816.41309.1582l.39697.10107c.16015.01563.32422.02344.49219.02344%20.48437%2C0%20.97461-.06641%201.4707-.19922s.91406-.36621%201.25391-.70019c.24413-.24414.44872-.51904.61377-.82471s.24755-.59131.24756-.85693c-1e-005-.11132-.00782-.1914-.02344-.24023z%22%2F%3E%20%3Cpath%20d%3D%22m47.21931%2C5.9224c.03125.24415.04687.4961.04688.75586%200%2C.21876-.01709.54249-.05127.97119s-.05713.81299-.06885%2C1.15283c-.00977.23829-.03272.58936-.06885%2C1.05322s-.05957.78125-.07031.95215-.01612.39405-.01611.66943c0%2C.03907.00195.10157.00586.1875s.00586.15137.00586.19629c.01562.74805.04394%2C1.56836.08496%2C2.46094-.01758.20117-.06299.3374-.13623.40869s-.21241.10693-.41748.10693l-.25049-.02783c-.08496-.01074-.16113-.03271-.22852-.06592s-.12402-.08691-.16992-.16113-.07764-.18066-.09521-.31934c.00586-.56641.01367-1.28271.02344-2.14893s.02246-2.12255.03809-3.76904v-1.11621c-.25196.11329-.43653.16993-.55371.16992-.11133%2C1e-005-.20752-.0332-.28857-.09961s-.18408-.18163-.30908-.3457c-.12109-.16796-.18164-.3037-.18164-.40723s.04395-.18407.13184-.24756%20.24463-.14306.47021-.23877%20.41113-.18163.55664-.25781%20.28369-.18065.41455-.31348c.11328-.11132.24121-.16698.38379-.16699%20.17383%2C1e-005%20.33691.06544.48926.19629s.2373.26563.25488.4043zm7.88965%2C1.79883c-.06641.45313-.18067.84766-.34277%2C1.18359s-.36475.62793-.60791.87598-.49659.4629-.76025.64453-.65333.43262-1.16895.75293c-.33399.20899-.64014.41602-.91846.62109s-.52344.41748-.73535.63721-.38526.45264-.52002.69873c.43164-.22656.98242-.39941%201.65234-.51855s1.31542-.17871%201.93652-.17871c.53906%2C0%20.91113.04004%201.11621.12012%20.11523.03711.23583.15576.36182.35596s.18896.39307.18897.57861c-1e-005%2C.32031-.21583.48047-.64746.48047-.14454%2C0-.25684-.00781-.33691-.02344-.2793-.03906-.57129-.05859-.87598-.05859-.52735%2C0-1.12305.05566-1.78711.16699-.19922.03516-.396.0918-.59033.16992s-.42334.18066-.68701.30762-.46826.21924-.61377.27685-.2749.08643-.38818.08643c-.07617%2C0-.14063-.0166-.19336-.0498-.19922-.11133-.42139-.33252-.6665-.66357s-.37842-.62158-.3999-.87158c.06836-.33594.33008-.74072.78516-1.21435s.95263-.92187%201.49267-1.34473%20.94873-.72216%201.22608-.89795c1.54492-.98242%202.38476-1.71777%202.51953-2.20605%20.01562-.0664.02343-.11425.02344-.14355-1e-005-.12109-.0459-.21874-.1377-.29297s-.20655-.12792-.34424-.16113-.28321-.05614-.43652-.06885l-.35303-.03076c-.16016-.01562-.28418-.02343-.37207-.02344-.35157%2C1e-005-.7212.05421-1.10889.1626s-.78516.28663-1.19238.53467-.8042.5713-1.19092.96973c-.0918.04102-.17188.06153-.24023.06152-.16016%2C1e-005-.29395-.07177-.40137-.21533s-.16113-.27587-.16113-.39697c0-.33202.04639-.59521.13916-.78955s.25439-.36767.48486-.52002c.43555-.28905.85351-.52294%201.25391-.70166s.79687-.3081%201.18945-.38818%20.79394-.12011%201.2041-.12012c.37304%2C1e-005%20.79296.03224%201.25977.09668%20.32421.07813.62939.31544.91553.71191s.42919.85841.4292%2C1.38574z%22%2F%3E%20%3Cpath%20d%3D%22m29.37177%2C11.3224c.03125.24415.04687.4961.04688.75586%200%2C.21876-.01709.54249-.05127.97119s-.05713.81299-.06885%2C1.15283c-.00977.23829-.03272.58936-.06885%2C1.05322s-.05957.78125-.07031.95215-.01612.39405-.01611.66943c0%2C.03906.00195.10156.00586.1875s.00586.15137.00586.19629c.01562.74805.04394%2C1.56836.08496%2C2.46094-.01758.20117-.06299.3374-.13623.40869s-.21241.10693-.41748.10693l-.25049-.02783c-.08496-.01074-.16114-.03271-.22852-.06592s-.12402-.08691-.16992-.16113-.07764-.18066-.09521-.31934c.00586-.5664.01367-1.28271.02344-2.14892s.02246-2.12255.03809-3.76904v-1.11621c-.25195.11329-.43652.16993-.55371.16992-.11133%2C1e-005-.20752-.0332-.28857-.09961s-.18408-.18163-.30908-.3457c-.1211-.16796-.18164-.3037-.18164-.40723s.04395-.18407.13184-.24756%20.24463-.14306.47021-.23877%20.41113-.18163.55664-.25781%20.28369-.18065.41455-.31348c.11328-.11132.24121-.16698.38379-.16699%20.17383%2C1e-005%20.33691.06544.48926.19629s.2373.26563.25488.4043zm3.77344%2C0c.03125.24415.04687.4961.04688.75586%200%2C.21876-.01709.54249-.05127.97119s-.05713.81299-.06885%2C1.15283c-.00977.23829-.03272.58936-.06885%2C1.05322s-.05957.78125-.07031.95215-.01612.39405-.01611.66943c0%2C.03906.00195.10156.00586.1875s.00586.15137.00586.19629c.01562.74805.04394%2C1.56836.08496%2C2.46094-.01758.20117-.06299.3374-.13623.40869s-.2124.10693-.41748.10693l-.25049-.02783c-.08496-.01074-.16113-.03271-.22851-.06592s-.12403-.08691-.16992-.16113-.07764-.18066-.09521-.31934c.00586-.5664.01367-1.28271.02344-2.14892s.02246-2.12255.03809-3.76904v-1.11621c-.25195.11329-.43652.16993-.55371.16992-.11133%2C1e-005-.20752-.0332-.28857-.09961s-.18408-.18163-.30908-.3457c-.12109-.16796-.18164-.3037-.18164-.40723s.04394-.18407.13184-.24756%20.24463-.14306.47021-.23877%20.41113-.18163.55664-.25781%20.28369-.18065.41455-.31348c.11328-.11132.24121-.16698.38379-.16699%20.17383%2C1e-005%20.33691.06544.48926.19629s.2373.26563.25488.4043z%22%2F%3E%20%3Cpath%20d%3D%22m12.20713%2C25.9224c.03125.24415.04687.4961.04688.75586%200%2C.21876-.01709.54249-.05127.97119s-.05713.813-.06885%2C1.15283c-.00977.23829-.03272.58936-.06885%2C1.05322s-.05957.78125-.07031.95215-.01612.39405-.01611.66943c0%2C.03907.00195.10157.00586.1875s.00586.15137.00586.19629c.01562.74805.04394%2C1.56836.08496%2C2.46094-.01758.20117-.06299.3374-.13623.40869s-.21241.10693-.41748.10693l-.25049-.02783c-.08496-.01074-.16113-.03271-.22851-.06592s-.12403-.08691-.16992-.16113-.07764-.18066-.09521-.31934c.00586-.56641.01367-1.28271.02344-2.14893s.02246-2.12255.03809-3.76904v-1.11621c-.25195.11329-.43652.16993-.55371.16992-.11133%2C1e-005-.20752-.0332-.28857-.09961s-.18408-.18163-.30908-.3457c-.12109-.16796-.18164-.3037-.18164-.40723s.04394-.18407.13184-.24756%20.24463-.14306.47021-.23877%20.41113-.18163.55664-.25781%20.28369-.18066.41455-.31348c.11328-.11132.24121-.16698.38379-.16699%20.17383%2C1e-005%20.33691.06544.48926.19629s.2373.26563.25488.4043zm9.01758%2C4.66699c-.24415.58203-.50294%2C1.07618-.77637%2C1.48242s-.56055.74317-.86133%2C1.01074-.61622.48926-.94629.66504-.7168.34766-1.16016.51563c-.60938.22266-1.16114.33398-1.65527.33398-.80664%2C0-1.43066-.28809-1.87207-.86426-.46484-.61914-.69727-1.35058-.69727-2.19434%200-.82226.21191-1.67089.63574-2.5459%20.25586-.52538.58252-1.0249.97998-1.49854s.83593-.87353%201.31543-1.19971%20.97021-.5498%201.47217-.6709c.35546-.08983.69921-.13476%201.03125-.13477%20.51953%2C1e-005%20.98095.1128%201.38428.33838s.71044.58936.92139%2C1.09131c.35155.84962.52734%2C1.58106.52734%2C2.19434-1e-005%2C.50391-.09962.9961-.29883%2C1.47656zm-.78223-2.62793c-.18555-.67968-.80079-1.01952-1.8457-1.01953-.1836%2C1e-005-.41993.01563-.70898.04688-.29883.02735-.6294.11768-.9917.271s-.7168.36671-1.06348.64014-.65039.60889-.91113%2C1.00635-.43994.84229-.5376%2C1.33447c-.03125.15039-.04688.31934-.04688.50684%200%2C.3418.06201.66651.18604.97412s.28418.56641.48047.77637%20.40185.35401.6167.43213c.16015.03906.35644.0586.58887.05859%20.56054%2C0%201.14013-.13086%201.73877-.39258s1.09912-.70605%201.50146-1.33301c.69531-1.07617%201.04296-2.01269%201.04297-2.80957-1e-005-.11327-.01661-.27734-.0498-.49219z%22%2F%3E%20%3Cpath%20d%3D%22m13.26207%2C47.2056c.19921.55079.29882%2C1.15528.29883%2C1.81348-1e-005%2C1.31446-.39161%2C2.54981-1.1748%2C3.70605-.44337.66016-.98292%2C1.15625-1.61865%2C1.48828s-1.26416.5166-1.88525.55371l-.1377.00586c-.0586.00391-.10059.00586-.12598.00586-1.00977%2C0-1.51465-.40039-1.51465-1.20117%20.00586-.11328.05078-.23877.13477-.37646s.18701-.25537.30908-.35303%20.23877-.14648.3501-.14648c.16797%2C0%20.29199.12012.37207.36035%20.22656.17578.4707.26367.73242.26367%20.05859%2C0%20.21777-.01953.47754-.05859%20.48828-.20117.8833-.39892%201.18506-.59326s.55029-.41601.7456-.66504%20.36132-.54443.49805-.88623%20.27148-.77539.4043-1.30078c-.22852.33985-.49952.62208-.81299.84668s-.64454.40235-.99316.5332-.72608.24317-1.13232.33691c-.29102.05664-.53516.08496-.73242.08496-.42578%2C0-.8086-.0874-1.14844-.26221s-.58496-.44775-.73535-.81885c-.17578-.42187-.26367-.8457-.26367-1.27148%200-.51757.13184-.97753.39551-1.37988%20.42969-.68554.86084-1.20409%201.29346-1.55566s1.01709-.64159%201.75342-.87012c.25781-.08007.52636-.12011.80566-.12012%20.36132%2C1e-005%20.71142.07618%201.05029.22852s.63574.36964.89063.65186%20.44775.60889.57861.97998zm-1.08106.25195c-.38087-.43945-.86524-.65917-1.45313-.65918-.27539%2C1e-005-.56055.0503-.85547.15088s-.56983.23145-.82471.39258-.48194.34034-.68115.5376c-.01758.03126-.10987.14844-.27686.35156s-.30078.40723-.40137.6123-.15088.42774-.15088.66797c.11719.42383.50097.63575%201.15137.63574%20.11328%2C0%20.25781-.00781.43359-.02344%20.36328-.04101.75341-.1372%201.17041-.28857s.79052-.39209%201.1206-.72217c.24609-.24609.43554-.49169.56836-.73682s.19921-.55126.19922-.91846z%22%2F%3E%20%3Cpath%20d%3D%22m53.03816%2C89.66654c.17577.42774.26366.85157.26367%2C1.27148-1e-005%2C.51368-.13184.97364-.39551%2C1.37988-.28126.44922-.56446.81885-.84961%2C1.10889s-.60596.53223-.9624.72656-.78858.37061-1.29639.52881c-.32227.10352-.65039.15527-.98438.15527-.5%2C0-.93848-.13574-1.31543-.40723s-.6582-.66797-.84375-1.18945c-.17578-.51562-.26367-1.03906-.26367-1.57031%200-1.22851.41992-2.46484%201.25977-3.70898%20.32812-.48632.67529-.91454%201.0415-1.28467s.73925-.66357%201.11914-.88037%20.74755-.33495%201.10303-.35449l.1377-.00586c.05664-.0039.09863-.00585.12598-.00586%201.00781%2C1e-005%201.51171.4004%201.51172%2C1.20117-.00587.17384-.09669.36329-.27246.56836s-.34864.30763-.51855.30762-.292-.12011-.37207-.36035c-.17774-.13671-.36622-.20507-.56543-.20508-.0918%2C1e-005-.21387.01856-.36621.05566s-.2461.0586-.28125.06445c-.64454.35157-1.15137.71827-1.52051%2C1.1001s-.6416.76807-.81738%2C1.15869-.33985.86621-.49219%2C1.42676c.23242-.34765.51855-.65918.8584-.93457s.70019-.5039%201.08105-.68555%20.7539-.31445%201.11914-.39844c.28124-.06249.54492-.09374.79102-.09375%20.85546%2C1e-005%201.42382.34376%201.70508%2C1.03125zm-.7793%2C1.03125c-.11719-.42382-.50098-.63574-1.15137-.63574-.11329%2C0-.25782.00782-.43359.02344-.29102.0293-.66016.16163-1.10742.39697s-.85157.57569-1.21289%2C1.021-.56738.98047-.61816%2C1.60547c.26758.24805.59472.37207.98145.37207%20.3457%2C0%20.71386-.08838%201.10449-.26514s.76122-.39453%201.11182-.65332%20.65576-.51611.91553-.77197c.03124-.05273.09033-.12597.17725-.21973s.15136-.18115.19336-.26221%20.06298-.19287.06299-.33545c-1e-005-.11133-.00782-.20312-.02344-.27539z%22%2F%3E%20%3Cpath%20d%3D%22m93.72078%2C50.7476c.12109.19727.18163.44922.18164.75586-.00587.39844-.12257.79688-.3501%2C1.19531s-.54249.71582-.94482.95215c-.44923.26563-.84473.47901-1.18652.64014s-.71973.29834-1.13379.41162-.88868.20215-1.42383.2666c-.20899.02539-.39746.03809-.56543.03809-.52344%2C0-.88379-.15625-1.08105-.46875s-.29883-.56445-.29883-.76758c0-.20898.1123-.31347.33691-.31348l.19043.02344c.58008%2C0%201.19238-.05908%201.83691-.17725s1.2246-.28662%201.74023-.50537c.66992-.28711%201.21777-.61914%201.64356-.99609%20.16015-.14843.24023-.29199.24023-.43066-1e-005-.15429-.09864-.27929-.2959-.375s-.49512-.14355-.89355-.14355l-.13184.00586c-.06446.00391-.11622.00586-.15527.00586-.60352.03711-1.00391.06495-1.20117.0835s-.4209.05469-.6709.1084-.59375.14209-1.03125.26514c-.25%2C0-.43848-.07568-.56543-.22705s-.19043-.33545-.19043-.55225c0-.37109.13574-.62695.40723-.76758%20.26367-.06249.55713-.12646.88037-.19189s.54394-.11621.66211-.15234l.71338-.26807c.26953-.10742.58789-.27538.95508-.50391s.68163-.4663.94336-.71338%20.39257-.45751.39258-.63135c-1e-005-.06249-.01563-.11425-.04688-.15527-.0586-.08007-.20606-.14794-.44238-.20361s-.52442-.08349-.86426-.0835c-.64063%2C1e-005-1.32666.10303-2.05811.30908s-1.41748.53468-2.05811.98584c-.10547.07227-.22168.1084-.34863.1084-.2793%2C1e-005-.43945-.17577-.48047-.52734%200-.37499.07129-.64697.21387-.81592s.34766-.30907.61523-.42041l.55225-.28125c.33886-.17382.64795-.30907.92725-.40576s.60937-.17235.99023-.22705c.57812-.08007%201.04687-.12011%201.40625-.12012%20.60742%2C1e-005%201.13085.09669%201.57031.29004%20.31249.13477.55663.34571.73242.63281s.26366.59962.26367.9375c-1e-005%2C.36134-.09962.68946-.29883.98438-.14259.20508-.2876.38624-.43506.54346s-.30518.31055-.47314.45996-.33301.29542-.49512.43799l.54785.07764c.17773.02637.3247.06446.44092.11426s.23437.13575.35449.25781%20.24755.3003.38232.53467z%22%2F%3E%20%3Cpath%20d%3D%22m71.08174%2C11.3224c.03125.24415.04687.4961.04688.75586%200%2C.21876-.01709.54249-.05127.97119s-.05713.81299-.06885%2C1.15283c-.00977.23829-.03272.58936-.06885%2C1.05322s-.05957.78125-.07031.95215-.01612.39405-.01611.66943c0%2C.03906.00195.10156.00586.1875s.00586.15137.00586.19629c.01562.74805.04394%2C1.56836.08496%2C2.46094-.01758.20117-.06299.3374-.13623.40869s-.21241.10693-.41748.10693l-.25049-.02783c-.08496-.01074-.16114-.03271-.22852-.06592s-.12403-.08691-.16992-.16113-.07764-.18066-.09521-.31934c.00586-.5664.01367-1.28271.02344-2.14892s.02246-2.12255.03809-3.76904v-1.11621c-.25195.11329-.43652.16993-.55371.16992-.11133%2C1e-005-.20752-.0332-.28857-.09961s-.18408-.18163-.30908-.3457c-.12109-.16796-.18164-.3037-.18164-.40723s.04395-.18407.13184-.24756%20.24463-.14306.47021-.23877%20.41113-.18163.55664-.25781%20.28369-.18065.41455-.31348c.11328-.11132.24121-.16698.38379-.16699%20.17382%2C1e-005%20.33691.06544.48926.19629s.2373.26563.25488.4043z%22%2F%3E%20%3Cpath%20d%3D%22m73.14655%2C85.15424c.05663.1875.08495.3916.08496.61231-1e-005%2C.4043-.09278.81055-.27832%2C1.21875s-.41309.73828-.68262.99023c-.48047.44336-1.01612.77783-1.60693%2C1.00342s-1.1958.33838-1.81494.33838c-.72266%2C0-1.40625-.15137-2.05078-.4541-.27148-.2168-.40723-.50097-.40723-.85254%200-.26172.07227-.53418.2168-.81738%20.07617-.14258.14746-.21386.21387-.21387%20.04883%2C0%20.09619.0293.14209.08789s.104.14356.17432.25488%20.13623.19776.19775.25928%20.13037.09619.20654.104c.36523.20117.7373.30176%201.11621.30176s.83105-.10449%201.36816-.31348c.57421-.22656%201.06494-.52197%201.47217-.88623s.63622-.73681.68701-1.11768c-.00587-.20703-.08643-.33691-.2417-.38965s-.42237-.09082-.80127-.11426c-.1211-.00781-.29297-.01171-.51563-.01172-.56641%2C0-1.04981.06348-1.4502.19043s-.95703.35938-1.66992.69727c-.19922%2C0-.43604-.1455-.71045-.43652s-.44189-.5459-.50244-.76465c0-.27539.06689-.72363.20068-1.34473s.29004-1.19775.46875-1.72998%20.32764-.83446.44678-.90674c.1582-.08983.34277-.15575.55371-.19775s.51318-.08007.90674-.11426%20.64697-.0581.76025-.07178c.15625-.01757.42675-.05273.81152-.10547s.6914-.09032.91992-.11279%20.45898-.03368.69141-.03369c.3496%2C1e-005%20.65722.03126.92285.09375%20.19335.04493.29003.19727.29004.45703-1e-005%2C.29493-.0918.59864-.27539.91113-.09571.16016-.17188.24024-.22852.24023-.0254%2C1e-005-.0752-.02734-.14941-.08203s-.15919-.10351-.25488-.14648-.2168-.0703-.36328-.08203c-.45508%2C1e-005-1.04395.03907-1.7666.11719s-1.33008.167-1.82227.2666c-.14063.22462-.27149.49317-.39258.80566s-.22022.62354-.29736.93311-.11572.54542-.11572.70752c.41601-.24804.95703-.43798%201.62305-.56982s1.22168-.19775%201.66699-.19775c.66601.01758%201.16796.12989%201.50586.33691s.58788.58692.75%2C1.13965z%22%2F%3E%20%3Cpath%20d%3D%22m32.65226%2C80.27045c.30273.36134.45409.64942.4541.86426-1e-005%2C.09766-.02344.1963-.07031.2959s-.13282.24659-.25781.44092c-.12501.19434-.21973.34425-.28418.44971-.26173.43555-.5337.95508-.81592%2C1.55859s-.54151%2C1.18848-.77783%2C1.75488c-.20118.47657-.3667.93213-.49658%2C1.3667s-.22412.79297-.28271%2C1.0752-.09961.48389-.12305.60498c-.06836.26953-.18701.479-.35596.62842s-.3501.22412-.54346.22412c-.07813%2C0-.1543-.01172-.22852-.03516-.27149-.10156-.40723-.23828-.40723-.41016%200-.12695.08398-.3584.25195-.69434%20.24023-.69531.47754-1.34424.71191-1.94678s.45996-1.14404.67676-1.62451%20.44873-.96337.6958-1.44873%20.54443-1.04443.89209-1.67725c-.22266-.01562-.41114-.02343-.56543-.02344-1.13086%2C1e-005-2.2461.16016-3.3457.48047-.04102.01173-.08154.05616-.12158.1333s-.07861.1377-.11572.18164-.10645.07471-.20801.09229c-.22266-.05468-.4126-.20556-.56982-.45264s-.24268-.46435-.25635-.65186c0-.3789.11524-.59862.3457-.65918%201.27734-.36523%202.26953-.56151%202.97656-.58887l1.03857-.04834%20.94189-.03369c.43359%2C1e-005%20.71386.04786.84082.14356z%22%2F%3E%20%3Cpath%20d%3D%22m87.98448%2C27.72123c-.06641.45313-.18067.84766-.34277%2C1.18359s-.36475.62794-.60791.87598-.49659.46289-.76025.64453-.65332.43262-1.16895.75293c-.33399.20899-.64014.41602-.91846.62109s-.52344.41748-.73535.63721-.38526.45264-.52002.69873c.43164-.22656.98242-.39941%201.65234-.51855s1.31542-.17871%201.93652-.17871c.53906%2C0%20.91113.04004%201.11621.12012%20.11523.03711.23583.15576.36182.35596s.18896.39307.18896.57861c-1e-005%2C.32031-.21583.48047-.64746.48047-.14454%2C0-.25684-.00781-.33691-.02344-.2793-.03906-.57129-.05859-.87598-.05859-.52735%2C0-1.12305.05566-1.78711.16699-.19922.03516-.396.0918-.59033.16992s-.42334.18066-.68701.30762-.46826.21924-.61377.27686-.2749.08643-.38818.08643c-.07617%2C0-.14063-.0166-.19336-.0498-.19922-.11133-.42139-.33252-.6665-.66357s-.37842-.62158-.3999-.87158c.06836-.33594.33008-.74072.78516-1.21435s.95264-.92187%201.49268-1.34473%20.94873-.72216%201.22607-.89795c1.54492-.98242%202.38476-1.71777%202.51953-2.20605%20.01562-.0664.02343-.11425.02344-.14355-1e-005-.12109-.04591-.21874-.1377-.29297s-.20655-.12792-.34424-.16113-.28321-.05615-.43652-.06885l-.35303-.03076c-.16016-.01562-.28418-.02343-.37207-.02344-.35157%2C1e-005-.72119.05421-1.10889.1626s-.78516.28663-1.19238.53467-.8042.5713-1.19092.96973c-.0918.04102-.17188.06153-.24024.06152-.16016%2C1e-005-.29395-.07177-.40137-.21533s-.16113-.27587-.16113-.39697c0-.33202.04639-.59521.13916-.78955s.25439-.36767.48486-.52002c.43555-.28905.85351-.52294%201.25391-.70166s.79687-.3081%201.18945-.38818%20.79394-.12011%201.2041-.12012c.37304%2C1e-005%20.79296.03224%201.25976.09668%20.32421.07813.62939.31544.91553.71191s.42919.85841.4292%2C1.38574z%22%2F%3E%20%3Cpath%20d%3D%22m88.53986%2C70.72123c-.09376.22266-.16309.38526-.20801.48779s-.09913.17725-.1626.22412-.16212.07666-.2959.08935-.3755.02588-.7251.03955c-1e-005%2C.69531.02831%2C1.39551.08496%2C2.10059%20.00781.08008.01171.17969.01172.29883-1e-005%2C.16016-.01856.27539-.05566.3457s-.11085.1582-.22119.26367-.20264.21094-.27685.31641c-.04297.05469-.11036.08203-.20215.08203-.11329%2C0-.22559-.04053-.33691-.12158s-.167-.16846-.16699-.26221c-.04883-.31445-.07325-.70996-.07324-1.18652-1e-005-.12109.00195-.29101.00586-.50977s.00585-.37304.00586-.46289c-1e-005-.37305-.02344-.64062-.07031-.80274l-1.56006.27979c-.45997.08301-.82813.15577-1.10449.21826s-.55859.14307-.84668.2417-.58643.21924-.89502.36182c-.17969-.08594-.33398-.22314-.46289-.41162s-.22559-.39697-.29004-.62549-.09668-.44628-.09668-.65332c.12695-.24609.39404-.62255.80127-1.12939s.87451-1.05078%201.40186-1.63184%201.0498-1.12841%201.56738-1.64209%20.92871-.88573%201.2334-1.11621c.14648-.11327.2705-.16991.37207-.16992%20.07031%2C1e-005%20.13281.02052.1875.06152s.14746.1211.27832.24024c.13281.00587.27929.09669.43945.27246s.24609.34864.25781.51855c-.05665.39845-.08497.81837-.08496%2C1.25977-1e-005%2C.22266.01171.5254.03516.9082s.04003.68458.0498.90527c.0039.07618.00781.18946.01172.33984s.00781.26075.01172.33106c.29101-.05664.55077-.08496.7793-.08496%20.44921%2C1e-005%20.67382.12012.67383.36035-1e-005%2C.08399-.02442.17188-.07324.26367zm-2.69824-.39551c-1e-005-.19531.00195-.47265.00586-.83203s.00585-.62206.00586-.78808c-1e-005-.59179-.0127-1.02343-.03809-1.29492-.68164.48243-1.37891%2C1.07227-2.0918%2C1.76953s-1.20313%2C1.33887-1.4707%2C1.9248c.21289-.10546.51465-.20166.90527-.28857s.88134-.17968%201.47217-.27832l1.21143-.2124z%22%2F%3E%20%3Cpath%20transform%3D%22matrix(1.1029%200%200%20.9264%20-5.3572%203.38)%22%20d%3D%22m51.554%2050.324c0%200.89378-0.60933%201.6192-1.3601%201.6192s-1.3601-0.72539-1.3601-1.6192%200.60933-1.6192%201.3601-1.6192%201.3601%200.72539%201.3601%201.6192z%22%20stroke%3D%22%23000%22%20stroke-linecap%3D%22round%22%20stroke-linejoin%3D%22round%22%20stroke-width%3D%221.484%22%2F%3E%3C%2Fsvg%3E');
    }

    #numq {
      font-size: 2.1em;
    }

    .hour-hand {
      position: absolute;
      top: 50px;
      left: 95px;
      height: 50px;
      width: 8px;
      transform: rotate(0deg);
      transform-origin: bottom center;
      background-color: black;
      border-radius: 30px;
    }

    .minute-hand {
      position: absolute;
      top: 20px;
      left: 96px;
      height: 80px;
      width: 4px;
      transform: rotate(60deg);
      transform-origin: bottom center;
      background-color: black;
      border-radius: 30px;
    }

    .clocks {
      max-width: 90%;
      min-height: 240px;
      display: flex;
      flex-flow: row wrap;
      justify-content: space-around;
      align-items: center;
    }

    .clocks .clock-container {
      display: flex;
      min-height: 240px;
      width: 250px;
      flex-flow: column wrap;
      justify-content: space-between;
      align-items: center;
    }

    .clocks .clock-container div:first-child,
    .am-or-pm {
      font-size: 1.6rem;
    }

    .responses {
      display: flex;
      justify-content: space-evenly;
      align-items: space-around;
      min-height: 100px;
      flex-flow: row wrap;
      max-width: 520px;
      margin: auto;
    }

    .responses .response {
      display: flex;
      min-width: 160px;
      flex-flow: row nowrap;
      justify-content: space-around;
      align-items: center;
    }

    .responses .response input {
      max-width: 90px;
    }
  </style>
</head>

<body>
  <?php $page = 'elapsed-time'; include 'header.php'; ?>
  <div class="container">
    <div class="jumbotron" id="form" style="background-color: #a5eaff">
      <h1 class="text-center">
        Elapsed Time 游독<br>
        <span style="font-size: 1.5rem">Online practice for grades 1-5</span>
      </h1>
      <div class="addthis_inline_share_toolbox"></div>
      <div class="row">
        <div class="col-lg-6">
          <p>Find how much time passes between two different given times (elapsed time or time intervals). The times are given with analog clocks. You can choose from many options below, such as whether to include AM/PM or not and limiting the times to full hours, full and half hours, quarter hours, and so on. 游독</p>

          <p>This practice is most useful for students in grades 2, 3, and 4, but older and younger students can benefit from it, too.</p>

          <div class="form-group mt-4">
            <div class="custom-control custom-radio">
              <input type="radio" name="ampm" id="ampm-none" class="custom-control-input" checked>
              <label for="ampm-none" class="custom-control-label">No AM/PM</label>
            </div>
            <div class="custom-control custom-radio">
              <input type="radio" name="ampm" id="ampm-easy" class="custom-control-input">
              <label for="ampm-easy" class="custom-control-label">AM/PM easy mode (the time difference is less than 12 hours)</label>
            </div>
            <div class="custom-control custom-radio">
              <input type="radio" name="ampm" id="ampm-hard" class="custom-control-input">
              <label for="ampm-hard" class="custom-control-label">AM/PM hard mode (the time difference may be 12 hours or more)</label>
            </div>
          </div>
          <label for="time-opts" class="mt-3 font-weight-bold">The times given are:</label>
          <div id="time-opts">
            <div class="custom-control custom-checkbox">
              <input type="checkbox" name="time-whole-hours" id="time-whole-hours" class="custom-control-input">
              <label for="time-whole-hours" class="custom-control-label">Whole hours (e.g. 6:<b>00</b>)</label>
            </div>
            <div class="custom-control custom-checkbox">
              <input type="checkbox" name="time-half-hours" id="time-half-hours" class="custom-control-input">
              <label for="time-half-hours" class="custom-control-label">Whole hours and half hours (e.g. 7:<b>30</b>)</label>
            </div>
            <div class="custom-control custom-checkbox">
              <input type="checkbox" name="time-quarter-hours" id="time-quarter-hours" class="custom-control-input">
              <label for="time-quarter-hours" class="custom-control-label">Quarter hours (e.g. 3:<b>15</b>, 9:<b>45</b>)</label>
            </div>
            <div class="custom-control custom-checkbox">
              <input type="checkbox" name="time-5-mins" id="time-5-mins" class="custom-control-input">
              <label for="time-5-mins" class="custom-control-label">To the nearest five minutes (e.g. 1:0<b>5</b>, 12:3<b>5</b>, 5:5<b>5</b>)</label>
            </div>
            <div class="custom-control custom-checkbox">
              <input type="checkbox" name="time-10-mins" id="time-10-mins" class="custom-control-input">
              <label for="time-10-mins" class="custom-control-label">To the nearest 10 minutes (e.g. 10:1<b>0</b>, 3:4<b>0</b>, 2:2<b>0</b>)</label>
            </div>
            <div class="custom-control custom-checkbox">
              <input type="checkbox" name="time-1-min" id="time-1-min" class="custom-control-input">
              <label for="time-1-min" class="custom-control-label">To the minute (e.g. 7:08, 2:43)</label>
            </div>
          </div>
        </div>
        <div class="col-lg-6">
          <p>
            Screenshot:<br />
            <img src="elapsed-time.png" class="rounded-lg screenshot" alt="Screenshot of someone doing a round">
          </p>
        </div>
      </div>
      <div class="tonanoq switch" style="transition: opacity .3s" onclick="$('#checkbox').prop('checked', false); $('.pfst').css('opacity', 0.6); $('.pfst').css('cursor', 'default'); this.style.opacity = 1; this.style.cursor = 'auto';">
        <div class="timed mt-5">
          <div class="custom-control custom-radio">
            <input type="radio" name="timed" id="ty" data-val="yes" class="custom-control-input">
            <label for="ty" class="custom-control-label">Timed practice (5 sec per answer)</label>
          </div>
          <div class="custom-control custom-radio">
            <input name="timed" type="radio" checked id="tn" data-val="no" class="custom-control-input">
            <label for="tn" class="custom-control-label">Not timed</label>
          </div>
        </div>
        <br>
        <div class="form-group">
          <label for="noq" style="font-weight: 500">Number of questions:</label>
          <select class="custom-select" id="noq">
            <option value="5">5</option>
            <option value="10" selected>10</option>
            <option value="15">15</option>
            <option value="20">20</option>
            <option value="25">25</option>
            <option value="30">30</option>
          </select>
        </div>
      </div>
      <u><b>OR</b></u><br>
      <input type="checkbox" onclick="
        !this.checked ? (function() {
          $('#checkbox').prop('checked', false);
          $('.pfst').css('opacity', 0.6);
          $('.pfst').css('cursor', 'default');
          $('.tonanoq')[0].style.opacity = 1;
          $('.tonanoq')[0].style.cursor = 'auto';
        }()) : (function() {
          $('#checkbox').prop('checked', true);
          $('.tonanoq').css('opacity', 0.6);
          $('.tonanoq').css('cursor', 'default');
          $('.pfst')[0].style.opacity = 1;
          $('.pfst')[0].style.cursor = 'auto';
        }())" id="checkbox">
      <div class="pfst switch" style="display: inline-block; opacity: 0.6; cursor: default; transition: opacity .3s" onclick="
        $('#checkbox').prop('checked', true);
        $('.tonanoq').css('opacity', 0.6);
        $('.tonanoq').css('cursor', 'default');
        this.style.opacity = 1;
        this.style.cursor = 'auto';">
        Practice for a set time: <input type="number" value="5" style="width: 80px; display: inline-block" id="settime" class="form-control"> min
      </div><br>
      <button class="btn btn-primary" onclick="onSubmit()" id="submit">Go!</button>
    </div>
    <div class="jumbotron d-none" id="questionbox" style="background-color: #a5eaff; text-align: center;">
      <div id="correctawrong" style="top: 8px; right: 8px">Correct: <span id="correct">0</span> &nbsp; Wrong: <span id="wrong">0</span></div>
      <div id="questionon" style="top: 8px; left: 8px"><span id="qon">1</span>/<span id="numoq"></span></div>
      <div id="numq" class="text-center" style="font-weight: bold">How much time passes?</div>
      <div class="clocks">
        <div class="clock-container">
          <div>from:</div>
          <div class="clock clock1">
            <div class="hour-hand"></div>
            <div class="minute-hand"></div>
          </div>
          <div class="am-or-pm"></div>
        </div>
        <div class="clock-container">
          <div>to:</div>
          <div class="clock clock2">
            <div class="hour-hand"></div>
            <div class="minute-hand"></div>
          </div>
          <div class="am-or-pm"></div>
        </div>
      </div>
      <br>
      <div class="responses">
        <div class="response form-inline">
          <input type="number" id="res-hours" class="form-control" value="0">
          <span>hours</span>
        </div>
        <div class="response form-inline">
          <input type="number" id="res-mins" class="form-control" value="0">
          <span>minutes</span>
        </div>
      </div>
      <br>
      <button class="btn btn-primary" id="check">Check</button>
      <br>
      <br>
      <div id="message"></div>
      <br>
      <br>
      <div id="progressbar"></div>
      <br><br>
      <div id="time"></div>
    </div>
    <div class="jumbotron" id="end" style="background-color: #a5eaff; text-align: center; font-size: 1.3em; display: none"> 
      Wrong: <span id="wronge"></span>
      <br> Correct: <span id="correcte"></span>
      <br>
      <br>
      <div id="pb" style="width: 75%; display: inline-block; margin: auto; height: 20px">
        <div id="wend"></div>
        <div id="cend"></div>
      </div><br><br>
      <button class="btn btn-primary" onclick="window.location.reload()">Practice Again</button>
    </div>
  </div>
  <?php include 'footer.php'; ?>
  <script>
    var valid = false;
    var wrong = 0;
    var correct = 0;
    var timeout;
    var timer;
    var timerInt;
    var timerSeconds;
    var interval;
    var started = false;
    var questionsAnswered = [];

    function time(seconds) {
      var minutes = Math.floor(seconds / 60);
      var secs = seconds % 60;
      if (secs < 10) secs = '0' + secs;
      return minutes + ':' + secs;
    }

    function minsToSecs(mins) {
      return Math.round(mins * 60);
    }

    function onSubmit() {
      /* end copied code */ var anyChecked = false;
      for (var key in timeOpts) {
        if (timeOpts[key].checked) anyChecked = true;
      }
      if (!anyChecked) {
        alert('Please select some options.');
        return;
      }
      // 5 lines - start copied code
      started = true;
      window.mode = $('.switch:eq(0)').prop('style').opacity == '0.6' ? 'settime' : 'timeq';
      if (mode == 'timeq') {
        for (var i = 0; i < parseInt(questions.val()); i++) {
          $('<div>').addClass('pp').appendTo(progressbar);
        }
        $('#numoq').text(parseInt(questions.val()));
      } else {
        $('#questionon').html('Question <span id="qon">1</span>');
        timerSeconds = minsToSecs($('#settime').val());
        $('#time').text(time(timerSeconds));
        timerInt = setInterval(function() {
          if(timerSeconds <= 0) clearInterval(timerInt);
          else timerSeconds--;
          $('#time').text(time(timerSeconds));
        }, 1000);
        timer = setTimeout(function() {
          clearTimeout(timer);
          alert('Time\'s up!');
          end();
        }, $('#settime').val() * 60000);
      }
      timed.each(function(key, el) {
        if (el.checked) {
          isTimed = $(el).data('val') == 'yes';
        }
      });
      window.AMPM = document.querySelector("#ampm-hard").checked || document.querySelector("#ampm-easy").checked;
      questionMode();
      newQuestion();
    }

    function rand(min, max) {
      return Math.floor(Math.random() * (max - (min - 1))) + min;
    }

    function questionGenerator() {
      // find elapsed time
      // user options

      var easyAMPM = document.querySelector("#ampm-easy").checked;

      // modes
      // mode 0 = whole hours
      // mode 1 = whole and half hours
      // mode 2 - quarter hours
      // mode 3 - five minute intervals
      // mode 4 - to the minute
      // mode 5 - ten minute intervals

      var mode = Object.keys(timeOpts).filter(function(k) {
        return timeOpts[k].checked;
      }).map(function(k) {
        return k == 'timeWholeHours' ? 0 : k == 'timeHalfHours' ? 1 : k == 'timeQuarterHours' ? 2 : k == 'time5Mins' ? 3 : k == 'time1Min' ? 4 : 5;
      });
      var maxhours = AMPM ? 24 : 12;

      // generate two random times
      var hour1, hour2, diff;

      if (easyAMPM) {
        do {
          hour1 = rand(1, maxhours);
          hour2 = rand(1, maxhours);
          diff = hour2 - hour1;
          if (diff < 0) diff = 24 - Math.abs(diff);
        } while (diff > 11);
      } else {
        hour1 = rand(1, maxhours);
        hour2 = rand(1, maxhours);
      }
      
      var modePicked = mode[Math.floor(Math.random() * mode.length)];

      if (modePicked == 0) {
        do {
          hour2 = rand(1, 12);
        } while (hour1 === hour2);
      }

      // switch hour1 and hour2 if hour 2 < hour 1

      if (hour2 < hour1 && !AMPM) {
        var temp = hour1;
        hour1 = hour2;
        hour2 = temp;
      }

      var minute1, minute2;

      switch (modePicked) {
        case 0:
          minute1 = 0;
          minute2 = 0;
          break;
        case 1:
          minute1 = rand(0, 1) == 1 ? 30 : 0;
          minute2 = rand(0, 1) == 1 ? 30 : 0;
          break;
        case 2:
          minute1 = rand(0, 3) * 15;
          minute2 = rand(0, 3) * 15;
          break;
        case 3:
          minute1 = rand(0, 11) * 5;
          minute2 = rand(0, 11) * 5;
          break;
        case 4:
          minute1 = rand(0, 59);
          minute2 = rand(0, 59);
          break;
        case 5:
          minute1 = rand(0, 11) * 10;
          minute2 = rand(0, 11) * 10;
          break;
        default:
          minute1 = 0;
          minute2 = 0;
          break;
      }
      // if the hours are the same, then check that minute1 is less than minute2

      if (hour1 == hour2 && minute1 > minute2) {
        var temp = minute1;
        minute1 = minute2;
        minute2 = temp;
      }

      // calculate the elapsed time

      var fulltime1 = hour1 * 60 + minute1;
      var fulltime2 = hour2 * 60 + minute2;

      var elapsedfulltime = fulltime2 - fulltime1;

      if (elapsedfulltime < 0) {
        elapsedfulltime = 1440 - Math.abs(elapsedfulltime);
      }

      var elapsedhours = Math.floor(elapsedfulltime / 60);
      var elapsedminutes = elapsedfulltime % 60;

      // calculate the rotation angles for the clock hands (in degrees).

      var minutehand1 = minute1 * 6;
      var minutehand2 = minute2 * 6;

      var hourhand1 = hour1 > 12 ? (hour1 - 12) * 30 + minute1 / 2 : hour1 * 30 + minute1 / 2;
      var hourhand2 = hour2 > 12 ? (hour2 - 12) * 30 + minute2 / 2 : hour2 * 30 + minute2 / 2;

      var quest = {
        q: [
          { mins: minute1, hrs: hour1, isPM: hour1 >= 12 && hour1 < 24 },
          { mins: minute2, hrs: hour2, isPM: hour2 >= 12 && hour2 < 24 }
        ],
        degs: [
          { mins: minutehand1, hrs: hourhand1 },
          { mins: minutehand2, hrs: hourhand2 }
        ]
      };
      var answer = { minutes: elapsedminutes, hours: elapsedhours };
      // start copied code
      return [quest, answer];
    }

    function questionMode() {
      window.questionOn = 0;
      $('#form').addClass('d-none');
      $('#questionbox').removeClass('d-none');
    }

    function end() {
      console.log(questionsAnswered);
      if (isTimed) {
        clearTimeout(timeout);
        clearInterval(interval);
      }
      if (mode != 'timeq') {
        clearTimeout(timer);
      }
      $('#questionbox').hide();
      $('#end').show();
      var wrongPercent = (wrong / (wrong + correct)) * 100;
      var correctPercent = (correct / (wrong + correct)) * 100;
      $('#wend').css('width', wrongPercent + '%');
      $('#cend').css('width', correctPercent + '%');
      if (wrongPercent == 0) {
        $('#cend').css('border-top-left-radius', '7px');
        $('#cend').css('border-bottom-left-radius', '7px');
      }
      if (correctPercent == 0) {
        $('#wend').css('border-top-right-radius', '7px');
        $('#wend').css('border-bottom-right-radius', '7px');
      }
      $('#wronge').text(wrong + ' (' + wrongPercent.toFixed(1) + '%)');
      $('#correcte').text(correct + ' (' + correctPercent.toFixed(1) + '%)');
    }

    function timeoutSet() {
      $('#message').css('color', 'green').text('5');
      timeout = setTimeout(function() {
        clearInterval(interval);
        alert('Time\'s up! Click OK to continue.');
        checkAns(true);
        newQuestion();
      }, 5000);
      interval = setInterval(function() {
        $('#message').text($('#message').text() - 1);
      }, 1000);
    }

    function newQuestion() {
      $('#numq').css('color', 'black');
      $('.responses input').prop('disabled', false);
      response.val('');
      $('.responses input:first').focus();
      $('#message').empty();
      if (isTimed) timeoutSet();
      if (questionOn == parseInt(questions.val()) && mode == 'timeq') {
        end();
      }
      questionOn++;
      $('#check').text('Check');
      $('#qon').text(questionOn);
      window.question = questionGenerator();
      $('.clock1 .hour-hand').css('transform', 'rotate(' + question[0].degs[0].hrs + 'deg)');
      $('.clock2 .hour-hand').css('transform', 'rotate(' + question[0].degs[1].hrs + 'deg)');

      $('.clock1 .minute-hand').css('transform', 'rotate(' + question[0].degs[0].mins + 'deg)');
      $('.clock2 .minute-hand').css('transform', 'rotate(' + question[0].degs[1].mins + 'deg)');

      if (AMPM) {
        $('.clocks .clock-container:first .am-or-pm').text(question[0].q[0].isPM ? 'PM' : 'AM');
        $('.clocks .clock-container:last .am-or-pm').text(question[0].q[1].isPM ? 'PM' : 'AM');
      }
    }

    function checkAns() {
      if (isTimed) {
        clearTimeout(timeout);
        clearInterval(interval);
      }
      $('#response').prop('disabled', true);
      $('#numq').css('color', '#888686');
      var isCorrect = arguments[0] ? false : (+$("#res-hours").val() == question[1].hours && +$("#res-mins").val() == question[1].minutes);
      if (isCorrect) {
        correct++;
        message.css('color', 'green').text('Correct');
      } else {
        wrong++;
        message.css('color', 'red').text('Sorry, that is not correct. The correct answer is: ' + question[1].hours + ' hour' + (question[1].hours == 1 ? '' : 's') + ' ' + question[1].minutes + ' minute' + (question[1].minutes == 1 ? '' : 's'));
      }
      $('input').blur();
      questionsAnswered.push({
        correctAnswer: question[1],
        question: question[0],
        isCorrect: isCorrect
      });
      $('.pp').eq(questionOn - 1).css('background-color', isCorrect ? 'green' : 'salmon');
      check.text('Continue');
      $('#correct').text(correct);
      $('#wrong').text(wrong);
    }
    function camelCase(str) {
      return str.split('-').map(function(item, i) {
        return i > 0 ? item.slice(0, 1).toUpperCase() + item.slice(1) : item;
      }).join('');
    }
    $(document).ready(function() {
      window.progressbar = $('#progressbar');
      window.questions = $('#noq');
      window.response = $('.responses input');
      window.timed = $('[name="timed"]');
      window.check = $('#check');
      window.message = $('#message');
      window.isTimed = false;
      window.timeOpts = Array.prototype.slice.call(document.querySelectorAll("#time-opts input")).reduce(function(acc, item) {
        acc[camelCase(item.id)] = item;
        return acc;
      }, {});
      $(document).on('keydown', function(event) {
        if (event.keyCode == 13 && !check.prop('disabled') && started) {
          event.preventDefault();
          check.click();
        }
      });
      check.click(function() {
        if (check.text() == 'Check') checkAns();
        else newQuestion();
      });
    });

  </script>
</body>

</html>
